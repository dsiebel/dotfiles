#!/usr/bin/env bash
#
# Usage: git-up
#        git-reup
#        git-ffup
#
# Like git-pull but show a short and sexy log of changes
# immediately after merging (git-up, git-ffup) or rebasing (git-reup).
#
# Inspired by Kyle Neath's `git up' alias:
# http://gist.github.com/249223
#
# Stolen from Ryan Tomayko
# http://github.com/rtomayko/dotfiles/blob/rtomayko/bin/git-up

set -e

# when invoked as git-reup, run as `git pull --rebase'

mode="norebase"

if [[ "$(basename "$0")" = "git-reup" ]]; then
	mode="rebase"
	PULL_FLAGS=("--rebase")
elif [[ "$(basename "$0")" = "git-ffup" ]]; then
	mode="ff"
	PULL_FLAGS=("--ff-only")
else
	mode="norebase"
	PULL_FLAGS=("--no-rebase")
fi

readonly old_head="$(git rev-parse HEAD)"

git pull "${PULL_FLAGS[@]}" "$@"

readonly new_head="$(git rev-parse HEAD)"

if [[ "${old_head}" != "${new_head}" ]]; then
	# show diffstat of all changes if we're pulling with --rebase. not
	# sure why git-pull only does this when merging.
	if [[ "${mode}" == "rebase" ]]; then
		echo "Diffstat:"
		git --no-pager diff --color --stat "${old_head}.." | sed 's/^/ /'
	fi

	# show an abbreviated commit log of stuff that was just merged.
	echo "Log:"
	git log --color --pretty=oneline --abbrev-commit "${old_head}.." | sed 's/^/  /'

fi

